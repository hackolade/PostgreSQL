/*
* Copyright © 2016-2017 by IntegrIT S.A. dba Hackolade.  All rights reserved.
*
* The copyright to the computer software herein is the property of IntegrIT S.A.
* The software may be used and/or copied only with the written permission of
* IntegrIT S.A. or in accordance with the terms and conditions stipulated in
* the agreement/contract under which the software has been supplied.


In order to define custom properties for any object's properties pane, you may copy/paste from the following,
making sure that you maintain a proper JSON format.

			{
				"propertyName": "Simple text",
				"propertyKeyword": "simpletextProp",
				"propertyType": "text",
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Text area",
				"propertyKeyword": "textareaProp",
				"propertyTooltip": "Popup for multi-line text entry",
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Dropdown selection",
				"propertyKeyword": "dropdownProp",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": [
					"Option 1",
					"Option 2",
					"Option 3",
					"Option 4"
				]
			},
			{
				"propertyName": "Numeric",
				"propertyKeyword": "numericProp",
				"propertyValidate": true,
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Checkbox",
				"propertyKeyword": "checkboxProp",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Group",
				"propertyType": "group",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
// “groupInput” can have the following states - 0 items, 1 item, and many items.
// “blockInput” has only 2 states - 0 items or 1 item.
// This gives us an easy way to represent it as an object and not as an array internally which is beneficial for processing
// and forward-engineering in particular.
			{
				"propertyName": "Block",
				"propertyType": "block",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
			{
				"propertyName": "Field List",
				"propertyKeyword": "keyList",
				"propertyType": "fieldList",
				"template": "orderedList"
			},
			{
				"propertyName": "List with attribute",
				"propertyKeyword": "keyListOrder",
				"propertyType": "fieldList",
				"template": "orderedList",
				"attributeList": [
					"ascending",
					"descending"
				]
			}

*/
{
	"lowerTab": "JsonDetails",
	"structure": {
		"char": [
			"name",
			"code",
			"schemaId",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": ["char", "varchar", "text", "bit", "varbit", "tsvector", "tsquery"],
				"data": "options",
				"valueType": "string",
				"cleanDependency": true
			},
			{
				"propertyName": "Length",
				"propertyKeyword": "length",
				"propertyType": "numeric",
				"valueType": "number",
				"propertyTooltip": "Setting for Length must be between 1 and 10485760",
				"minValue": 1,
				"maxValue": 10485760,
				"step": 1,
				"typeDecorator": true,
				"dependency": {
					"key": "mode",
					"value": ["char", "varchar", "bit", "varbit"]
				}
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Collation rule",
				"propertyKeyword": "collationRule",
				"propertyTooltip": "If different than default.  For example us_EN or be_FR",
				"propertyType": "text",
				"dependency": {
					"key": "mode",
					"value": ["char", "varchar", "text"]
				}
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"key": "primaryKey",
					"value": true
				},
				"disabled": true,
				"defaultValue": true
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "primaryKey",
							"value": false
						},
						{
							"key": "primaryKey",
							"exists": false
						}
					]
				},
				"defaultValue": false
			},
			"default",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyNameFull": "Composite Primary Key",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"value": {
								"type": "and",
								"values": [
									{
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "or",
										"values": [
											{
												"key": "compositeUniqueKey",
												"value": false
											},
											{
												"key": "compositeUniqueKey",
												"exist": false
											}
										]
									}
								]
							}
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"preserveOnCleanDependencies": true,
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"type": "not",
							"values": [
								{
									"level": "siblings",
									"value": {
										"type": "and",
										"values": [
											{
												"key": "primaryKey",
												"value": true
											},
											{
												"type": "or",
												"values": [
													{
														"key": "compositeUniqueKey",
														"value": false
													},
													{
														"key": "compositeUniqueKey",
														"exist": false
													}
												]
											}
										]
									}
								}
							]
						},
						{
							"type": "and",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						},
						{
							"type": "not",
							"values": {
								"key": "unique",
								"value": true
							}
						}
					]
				}
			},
			{
				"propertyName": "Primary key options",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Primary key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "primaryKey",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					}
				]
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyNameFull": "Composite Unique Key",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "primaryKey",
											"value": false
										},
										{
											"key": "primaryKey",
											"exist": false
										}
									]
								},
								{
									"key": "compositePrimaryKey",
									"value": true
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique key options",
				"propertyType": "group",
				"propertyKeyword": "uniqueKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Unique key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "unique",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					},
					{
						"propertyName": "Nulls Distinct",
						"propertyKeyword": "nullsDistinct",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "NULLS DISTINCT", "NULLS NOT DISTINCT"]
					}
				]
			},
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"minLength",
			"maxLength",
			"pattern",
			"format",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"numeric": [
			"name",
			"code",
			"schemaId",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": [
					"smallint",
					"integer",
					"bigint",
					"numeric",
					"real",
					"double precision",
					"smallserial",
					"serial",
					"bigserial",
					"money"
				],
				"data": "options",
				"valueType": "string"
			},
			{
				"propertyName": "Precision",
				"propertyKeyword": "precision",
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"typeDecorator": true,
				"dependency": {
					"key": "mode",
					"value": ["numeric"]
				}
			},
			{
				"propertyName": "Scale",
				"propertyKeyword": "scale",
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"typeDecorator": true,
				"dependency": {
					"key": "mode",
					"value": ["numeric"]
				}
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"dependency": {
					"type": "not",
					"values": [
						{
							"key": "mode",
							"value": ["smallserial", "serial", "bigserial"]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"default",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyNameFull": "Composite Primary Key",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"value": {
								"type": "and",
								"values": [
									{
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "or",
										"values": [
											{
												"key": "compositeUniqueKey",
												"value": false
											},
											{
												"key": "compositeUniqueKey",
												"exist": false
											}
										]
									}
								]
							}
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"preserveOnCleanDependencies": true,
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"type": "not",
							"values": [
								{
									"level": "siblings",
									"value": {
										"type": "and",
										"values": [
											{
												"key": "primaryKey",
												"value": true
											},
											{
												"type": "or",
												"values": [
													{
														"key": "compositeUniqueKey",
														"value": false
													},
													{
														"key": "compositeUniqueKey",
														"exist": false
													}
												]
											}
										]
									}
								}
							]
						},
						{
							"type": "and",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						},
						{
							"type": "not",
							"values": {
								"key": "unique",
								"value": true
							}
						}
					]
				}
			},
			{
				"propertyName": "Primary key options",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Primary key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "primaryKey",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					}
				]
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyNameFull": "Composite Unique Key",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "primaryKey",
											"value": false
										},
										{
											"key": "primaryKey",
											"exist": false
										}
									]
								},
								{
									"key": "compositePrimaryKey",
									"value": true
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique key options",
				"propertyType": "group",
				"propertyKeyword": "uniqueKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Unique key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "unique",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					},
					{
						"propertyName": "Nulls Distinct",
						"propertyKeyword": "nullsDistinct",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "NULLS DISTINCT", "NULLS NOT DISTINCT"]
					}
				]
			},
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"unit",
			"minimum",
			"exclusiveMinimum",
			"maximum",
			"exclusiveMaximum",
			"multipleOf",
			"divisibleBy",
			"pattern",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"binary": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": ["bytea"],
				"data": "options",
				"valueType": "string"
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyNameFull": "Composite Primary Key",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"value": {
								"type": "and",
								"values": [
									{
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "or",
										"values": [
											{
												"key": "compositeUniqueKey",
												"value": false
											},
											{
												"key": "compositeUniqueKey",
												"exist": false
											}
										]
									}
								]
							}
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"preserveOnCleanDependencies": true,
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"type": "not",
							"values": [
								{
									"level": "siblings",
									"value": {
										"type": "and",
										"values": [
											{
												"key": "primaryKey",
												"value": true
											},
											{
												"type": "or",
												"values": [
													{
														"key": "compositeUniqueKey",
														"value": false
													},
													{
														"key": "compositeUniqueKey",
														"exist": false
													}
												]
											}
										]
									}
								}
							]
						},
						{
							"type": "and",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						},
						{
							"type": "not",
							"values": {
								"key": "unique",
								"value": true
							}
						}
					]
				}
			},
			{
				"propertyName": "Primary key options",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Primary key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "primaryKey",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					}
				]
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyNameFull": "Composite Unique Key",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "primaryKey",
											"value": false
										},
										{
											"key": "primaryKey",
											"exist": false
										}
									]
								},
								{
									"key": "compositePrimaryKey",
									"value": true
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique key options",
				"propertyType": "group",
				"propertyKeyword": "uniqueKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Unique key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "unique",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					},
					{
						"propertyName": "Nulls Distinct",
						"propertyKeyword": "nullsDistinct",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "NULLS DISTINCT", "NULLS NOT DISTINCT"]
					}
				]
			},
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"datetime": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": ["date", "time", "timestamp", "interval"],
				"data": "options",
				"valueType": "string"
			},
			{
				"propertyName": "Precision",
				"propertyKeyword": "timePrecision",
				"propertyType": "numeric",
				"valueType": "number",
				"propertyTooltip": "Setting for precision must be between 0 and 6",
				"minValue": 0,
				"maxValue": 6,
				"step": 1,
				"typeDecorator": true,
				"dependency": {
					"key": "mode",
					"value": ["time", "timestamp", "interval"]
				}
			},
			{
				"propertyName": "Timezone",
				"propertyKeyword": "timezone",
				"propertyType": "select",
				"options": ["", "WITH TIME ZONE", "WITHOUT TIME ZONE"],
				"dependency": {
					"key": "mode",
					"value": ["time", "timestamp"]
				}
			},
			{
				"propertyName": "Interval options",
				"propertyKeyword": "intervalOptions",
				"propertyType": "select",
				"options": [
					"YEAR",
					"MONTH",
					"DAY",
					"HOUR",
					"MINUTE",
					"SECOND",
					"YEAR TO MONTH",
					"DAY TO HOUR",
					"DAY TO MINUTE",
					"DAY TO SECOND",
					"HOUR TO MINUTE",
					"HOUR TO SECOND",
					"MINUTE TO SECOND"
				],
				"data": "options",
				"valueType": "string",
				"dependency": {
					"key": "mode",
					"value": "interval"
				}
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"default",
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyNameFull": "Composite Primary Key",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"value": {
								"type": "and",
								"values": [
									{
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "or",
										"values": [
											{
												"key": "compositeUniqueKey",
												"value": false
											},
											{
												"key": "compositeUniqueKey",
												"exist": false
											}
										]
									}
								]
							}
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"preserveOnCleanDependencies": true,
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"type": "not",
							"values": [
								{
									"level": "siblings",
									"value": {
										"type": "and",
										"values": [
											{
												"key": "primaryKey",
												"value": true
											},
											{
												"type": "or",
												"values": [
													{
														"key": "compositeUniqueKey",
														"value": false
													},
													{
														"key": "compositeUniqueKey",
														"exist": false
													}
												]
											}
										]
									}
								}
							]
						},
						{
							"type": "and",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						},
						{
							"type": "not",
							"values": {
								"key": "unique",
								"value": true
							}
						}
					]
				}
			},
			{
				"propertyName": "Primary key options",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Primary key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "primaryKey",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					}
				]
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyNameFull": "Composite Unique Key",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "primaryKey",
											"value": false
										},
										{
											"key": "primaryKey",
											"exist": false
										}
									]
								},
								{
									"key": "compositePrimaryKey",
									"value": true
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique key options",
				"propertyType": "group",
				"propertyKeyword": "uniqueKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Unique key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "unique",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					},
					{
						"propertyName": "Nulls Distinct",
						"propertyKeyword": "nullsDistinct",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "NULLS DISTINCT", "NULLS NOT DISTINCT"]
					}
				]
			},
			"pattern",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"boolean": [
			"name",
			"code",
			"schemaId",
			"type",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"default",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"range": [
			"name",
			"code",
			"schemaId",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": ["int4range", "int8range", "numrange", "daterange", "tsrange", "tstzrange"],
				"data": "options",
				"valueType": "string"
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"default",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyNameFull": "Composite Primary Key",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"value": {
								"type": "and",
								"values": [
									{
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "or",
										"values": [
											{
												"key": "compositeUniqueKey",
												"value": false
											},
											{
												"key": "compositeUniqueKey",
												"exist": false
											}
										]
									}
								]
							}
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"preserveOnCleanDependencies": true,
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"type": "not",
							"values": [
								{
									"level": "siblings",
									"value": {
										"type": "and",
										"values": [
											{
												"key": "primaryKey",
												"value": true
											},
											{
												"type": "or",
												"values": [
													{
														"key": "compositeUniqueKey",
														"value": false
													},
													{
														"key": "compositeUniqueKey",
														"exist": false
													}
												]
											}
										]
									}
								}
							]
						},
						{
							"type": "and",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						},
						{
							"type": "not",
							"values": {
								"key": "unique",
								"value": true
							}
						}
					]
				}
			},
			{
				"propertyName": "Primary key options",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Primary key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "primaryKey",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					}
				]
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyNameFull": "Composite Unique Key",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "primaryKey",
											"value": false
										},
										{
											"key": "primaryKey",
											"exist": false
										}
									]
								},
								{
									"key": "compositePrimaryKey",
									"value": true
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique key options",
				"propertyType": "group",
				"propertyKeyword": "uniqueKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Unique key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "unique",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					},
					{
						"propertyName": "Nulls Distinct",
						"propertyKeyword": "nullsDistinct",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "NULLS DISTINCT", "NULLS NOT DISTINCT"]
					}
				]
			},
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"unit",
			"minimum",
			"exclusiveMinimum",
			"maximum",
			"exclusiveMaximum",
			"multipleOf",
			"divisibleBy",
			"pattern",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"multirange": [
			"name",
			"code",
			"schemaId",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": [
					"int4multirange",
					"int8multirange",
					"nummultirange",
					"datemultirange",
					"tsmultirange",
					"tstzmultirange"
				],
				"data": "options",
				"valueType": "string"
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"default",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyNameFull": "Composite Primary Key",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"value": {
								"type": "and",
								"values": [
									{
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "or",
										"values": [
											{
												"key": "compositeUniqueKey",
												"value": false
											},
											{
												"key": "compositeUniqueKey",
												"exist": false
											}
										]
									}
								]
							}
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"preserveOnCleanDependencies": true,
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"type": "not",
							"values": [
								{
									"level": "siblings",
									"value": {
										"type": "and",
										"values": [
											{
												"key": "primaryKey",
												"value": true
											},
											{
												"type": "or",
												"values": [
													{
														"key": "compositeUniqueKey",
														"value": false
													},
													{
														"key": "compositeUniqueKey",
														"exist": false
													}
												]
											}
										]
									}
								}
							]
						},
						{
							"type": "and",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						},
						{
							"type": "not",
							"values": {
								"key": "unique",
								"value": true
							}
						}
					]
				}
			},
			{
				"propertyName": "Primary key options",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Primary key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "primaryKey",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					}
				]
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyNameFull": "Composite Unique Key",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "primaryKey",
											"value": false
										},
										{
											"key": "primaryKey",
											"exist": false
										}
									]
								},
								{
									"key": "compositePrimaryKey",
									"value": true
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique key options",
				"propertyType": "group",
				"propertyKeyword": "uniqueKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Unique key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "unique",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					},
					{
						"propertyName": "Nulls Distinct",
						"propertyKeyword": "nullsDistinct",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "NULLS DISTINCT", "NULLS NOT DISTINCT"]
					}
				]
			},
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"unit",
			"minimum",
			"exclusiveMinimum",
			"maximum",
			"exclusiveMaximum",
			"multipleOf",
			"divisibleBy",
			"pattern",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"___0": [],
		"geometry": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": [
					"point",
					"line",
					"lseg",
					"box",
					"path",
					"polygon",
					"circle",
					"box2d",
					"box3d",
					"geometry",
					"geometry_dump",
					"geography"
				],
				"data": "options",
				"valueType": "string"
			},
			{
				"propertyName": "Type modifier",
				"propertyKeyword": "typeModifier",
				"propertyType": "text",
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "mode",
							"value": "geometry"
						},
						{
							"key": "mode",
							"value": "geography"
						}
					]
				}
			},
			{
				"propertyName": "SRID",
				"propertyKeyword": "srid",
				"propertyType": "text",
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "mode",
							"value": "geometry"
						},
						{
							"key": "mode",
							"value": "geography"
						}
					]
				}
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"inet": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": ["inet", "cidr", "macaddr", "macaddr8"],
				"data": "options",
				"valueType": "string"
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyNameFull": "Composite Primary Key",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"value": {
								"type": "and",
								"values": [
									{
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "or",
										"values": [
											{
												"key": "compositeUniqueKey",
												"value": false
											},
											{
												"key": "compositeUniqueKey",
												"exist": false
											}
										]
									}
								]
							}
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"preserveOnCleanDependencies": true,
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"type": "not",
							"values": [
								{
									"level": "siblings",
									"value": {
										"type": "and",
										"values": [
											{
												"key": "primaryKey",
												"value": true
											},
											{
												"type": "or",
												"values": [
													{
														"key": "compositeUniqueKey",
														"value": false
													},
													{
														"key": "compositeUniqueKey",
														"exist": false
													}
												]
											}
										]
									}
								}
							]
						},
						{
							"type": "and",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						},
						{
							"type": "not",
							"values": {
								"key": "unique",
								"value": true
							}
						}
					]
				}
			},
			{
				"propertyName": "Primary key options",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Primary key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "primaryKey",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With options",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					}
				]
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyNameFull": "Composite Unique Key",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "primaryKey",
											"value": false
										},
										{
											"key": "primaryKey",
											"exist": false
										}
									]
								},
								{
									"key": "compositePrimaryKey",
									"value": true
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique key options",
				"propertyType": "group",
				"propertyKeyword": "uniqueKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Unique key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "unique",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With options",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					},
					{
						"propertyName": "Nulls Distinct",
						"propertyKeyword": "nullsDistinct",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "NULLS DISTINCT", "NULLS NOT DISTINCT"]
					}
				]
			},
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"pattern",
			"default",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"uuid": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			"type",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyNameFull": "Composite Primary Key",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"value": {
								"type": "and",
								"values": [
									{
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "or",
										"values": [
											{
												"key": "compositeUniqueKey",
												"value": false
											},
											{
												"key": "compositeUniqueKey",
												"exist": false
											}
										]
									}
								]
							}
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"preserveOnCleanDependencies": true,
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"type": "not",
							"values": [
								{
									"level": "siblings",
									"value": {
										"type": "and",
										"values": [
											{
												"key": "primaryKey",
												"value": true
											},
											{
												"type": "or",
												"values": [
													{
														"key": "compositeUniqueKey",
														"value": false
													},
													{
														"key": "compositeUniqueKey",
														"exist": false
													}
												]
											}
										]
									}
								}
							]
						},
						{
							"type": "and",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						},
						{
							"type": "not",
							"values": {
								"key": "unique",
								"value": true
							}
						}
					]
				}
			},
			{
				"propertyName": "Primary key options",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Primary key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "primaryKey",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With options",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					}
				]
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyNameFull": "Composite Unique Key",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "primaryKey",
											"value": false
										},
										{
											"key": "primaryKey",
											"exist": false
										}
									]
								},
								{
									"key": "compositePrimaryKey",
									"value": true
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique key options",
				"propertyType": "group",
				"propertyKeyword": "uniqueKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Unique key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "unique",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With options",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					},
					{
						"propertyName": "Nulls Distinct",
						"propertyKeyword": "nullsDistinct",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "NULLS DISTINCT", "NULLS NOT DISTINCT"]
					}
				]
			},
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"pattern",
			"default",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"oid": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyType": "select",
				"options": [
					"oid",
					"regclass",
					"regcollation",
					"regconfig",
					"regdictionary",
					"regnamespace",
					"regoper",
					"regoperator",
					"regproc",
					"regprocedure",
					"regrole",
					"regtype"
				],
				"data": "options",
				"valueType": "string"
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "compositePrimaryKey",
				"propertyNameFull": "Composite Primary Key",
				"propertyType": "checkbox",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "This column is part of the table composite primary key definition. Please refer to this definition if you want more information or to update the Primary Key definition",
							"dependency": {
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Remove the existing composite primary key definition prior to unlock the possibility to mark this single column as the new primary key for this table",
							"dependency": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"tooltip": "Another column has already been selected as primary key.  You must unselect it prior to either selecting this column, or creating a compound primary key.",
							"dependency": {
								"level": "siblings",
								"key": "primaryKey",
								"value": true
							}
						}
					]
				},
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"key": "compositePrimaryKey",
							"value": true
						},
						{
							"level": "siblings",
							"value": {
								"type": "and",
								"values": [
									{
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "or",
										"values": [
											{
												"key": "compositeUniqueKey",
												"value": false
											},
											{
												"key": "compositeUniqueKey",
												"exist": false
											}
										]
									}
								]
							}
						}
					]
				},
				"disabled": true
			},
			{
				"propertyName": "Primary key",
				"propertyKeyword": "primaryKey",
				"enableForReference": true,
				"propertyType": "checkbox",
				"preserveOnCleanDependencies": true,
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"level": "siblings",
								"key": "compositePrimaryKey",
								"value": true
							}
						},
						{
							"type": "not",
							"values": [
								{
									"level": "siblings",
									"value": {
										"type": "and",
										"values": [
											{
												"key": "primaryKey",
												"value": true
											},
											{
												"type": "or",
												"values": [
													{
														"key": "compositeUniqueKey",
														"value": false
													},
													{
														"key": "compositeUniqueKey",
														"exist": false
													}
												]
											}
										]
									}
								}
							]
						},
						{
							"type": "and",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						},
						{
							"type": "not",
							"values": {
								"key": "unique",
								"value": true
							}
						}
					]
				}
			},
			{
				"propertyName": "Primary key options",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Primary key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "primaryKey",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With options",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					}
				]
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "compositeUniqueKey",
				"propertyNameFull": "Composite Unique Key",
				"propertyType": "checkbox",
				"dependency": {
					"key": "compositeUniqueKey",
					"value": true
				},
				"disabled": true
			},
			{
				"propertyName": "Unique",
				"propertyKeyword": "unique",
				"enableForReference": true,
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "or",
							"values": [
								{
									"type": "or",
									"values": [
										{
											"key": "primaryKey",
											"value": false
										},
										{
											"key": "primaryKey",
											"exist": false
										}
									]
								},
								{
									"key": "compositePrimaryKey",
									"value": true
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				}
			},
			{
				"propertyName": "Unique key options",
				"propertyType": "group",
				"propertyKeyword": "uniqueKeyOptions",
				"enableForReference": true,
				"propertyTooltip": "Unique key options",
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "unique",
							"value": true
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositePrimaryKey",
									"value": false
								},
								{
									"key": "compositePrimaryKey",
									"exist": false
								}
							]
						},
						{
							"type": "or",
							"values": [
								{
									"key": "compositeUniqueKey",
									"value": false
								},
								{
									"key": "compositeUniqueKey",
									"exist": false
								}
							]
						}
					]
				},
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "constraintName",
						"propertyType": "text"
					},
					{
						"propertyName": "Include non-key columns",
						"propertyKeyword": "indexInclude",
						"propertyType": "fieldList",
						"template": "orderedList",
						"propertyTooltip": "The optional INCLUDE clause specifies a list of columns which will be included in the constraint as non-key columns."
					},
					{
						"propertyName": "With storage parameters",
						"propertyKeyword": "indexStorageParameters",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false
					},
					{
						"propertyName": "Tablespace",
						"propertyKeyword": "indexTablespace",
						"propertyType": "text"
					},
					{
						"propertyName": "Deferrable",
						"propertyKeyword": "deferrable",
						"propertyTooltip": "\nA constraint that is not deferrable will be checked immediately after every command. Checking of constraints that are deferrable can be postponed until the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "DEFERRABLE", "NOT DEFERRABLE"]
					},
					{
						"propertyName": "Check time",
						"propertyKeyword": "deferrableConstraintCheckTime",
						"propertyTooltip": "\nIf the constraint is INITIALLY IMMEDIATE, it is checked after each statement. This is the default. If the constraint is INITIALLY DEFERRED, it is checked only at the end of the transaction",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "INITIALLY IMMEDIATE", "INITIALLY DEFERRED"],
						"dependency": {
							"key": "deferrable",
							"value": "DEFERRABLE"
						}
					},
					{
						"propertyName": "Comment",
						"propertyKeyword": "indexComment",
						"propertyTooltip": "comment",
						"addTimestampButton": false,
						"propertyType": "details",
						"template": "textarea"
					},
					{
						"propertyName": "Nulls Distinct",
						"propertyKeyword": "nullsDistinct",
						"propertyType": "select",
						"defaultValue": "",
						"options": ["", "NULLS DISTINCT", "NULLS NOT DISTINCT"]
					}
				]
			},
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"pattern",
			"default",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"json": [
			"name",
			"sampleName",
			"schemaId",
			"refPath",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"shouldValidate": false,
				"propertyType": "select",
				"options": ["json", "jsonb"],
				"data": "options",
				"valueType": "string"
			},
			{
				"propertyName": "JSON Types",
				"propertyKeyword": "subtype",
				"propertyType": "select",
				"options": [
					{
						"name": "object",
						"value": "object"
					},
					{
						"name": "array",
						"value": "array"
					},
					{
						"name": "string",
						"value": "string"
					},
					{
						"name": "number",
						"value": "number"
					},
					{
						"name": "boolean",
						"value": "boolean"
					},
					{
						"name": "null",
						"value": "null"
					}
				],
				"defaultValue": "object"
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Min Properties",
				"propertyKeyword": "minProperties",
				"propertyType": "numeric",
				"dependency": {
					"key": "subtype",
					"value": "object"
				}
			},
			{
				"propertyName": "Max Properties",
				"propertyKeyword": "maxProperties",
				"propertyType": "numeric",
				"dependency": {
					"key": "subtype",
					"value": "object"
				}
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"required",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "JSON Type",
				"propertyKeyword": "physicalType",
				"hidden": true
			}
		],
		"vector": [
			"name",
			"code",
			"isActivated",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "subtype",
				"propertyType": "select",
				"options": ["vector", "halfvec", "sparsevec"],
				"cleanDependency": true
			},
			{
				"propertyName": "Dimension",
				"propertyKeyword": "dimension",
				"propertyType": "numeric",
				"valueType": "integer",
				"allowNegative": false,
				"typeDecorator": true,
				"minValue": 0,
				"step": 1,
				"maxValue": 2000,
				"dependency": {
					"key": "subtype",
					"value": "vector"
				}
			},
			{
				"propertyName": "Dimension",
				"propertyKeyword": "dimension",
				"propertyType": "numeric",
				"valueType": "integer",
				"allowNegative": false,
				"typeDecorator": true,
				"minValue": 0,
				"step": 1,
				"maxValue": 4000,
				"dependency": {
					"key": "subtype",
					"value": "halfvec"
				}
			},
			{
				"propertyName": "Dimension",
				"propertyKeyword": "dimension",
				"propertyType": "numeric",
				"valueType": "integer",
				"allowNegative": false,
				"typeDecorator": true,
				"minValue": 0,
				"step": 1,
				"maxValue": 1000,
				"dependency": {
					"key": "subtype",
					"value": "sparsevec"
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"propertyType": "checkbox"
			},
			"minItems",
			"maxItems",
			"uniqueItems",
			"additionalItems",
			{
				"propertyName": "Default",
				"propertyKeyword": "default",
				"propertyType": "text"
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"xml": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			"type",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"pattern",
			"default",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"___1": [],
		"composite": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			"type",
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"enableForReference": true,
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Generated column",
				"propertyKeyword": "generatedColumn",
				"propertyTooltip": "A generated column is a special column that is always computed from other columns",
				"propertyType": "checkbox",
				"dependency": {
					"type": "not",
					"values": {
						"type": "or",
						"values": [
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v10.x"
							},
							{
								"level": "model",
								"key": "dbVersion",
								"value": "v11.x"
							}
						]
					}
				}
			},
			{
				"propertyName": "Generation expression",
				"propertyKeyword": "columnGenerationExpression",
				"propertyTooltip": "An SQL statement for computing values for this column",
				"propertyType": "details",
				"template": "textarea",
				"markdown": false,
				"dependency": {
					"type": "and",
					"values": [
						{
							"key": "generatedColumn",
							"value": true
						},
						{
							"type": "not",
							"values": {
								"type": "or",
								"values": [
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v10.x"
									},
									{
										"level": "model",
										"key": "dbVersion",
										"value": "v11.x"
									}
								]
							}
						}
					]
				}
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"enum": [
			"name",
			"code",
			"sampleName",
			"schemaId",
			"refPath",
			"type",
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"enableForReference": true,
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"pattern",
			"default",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"range_udt": [
			"name",
			"code",
			"schemaId",
			"type",
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"enableForReference": true,
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"default",
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Subtype",
				"propertyKeyword": "rangeSubtype",
				"propertyTooltip": "The name of the element type that the range type will represent ranges of.",
				"propertyType": "text",
				"dependency": {
					"level": "parent",
					"key": "type",
					"value": "definitions"
				}
			},
			{
				"propertyName": "Operator class",
				"propertyKeyword": "operatorClass",
				"propertyTooltip": "The name of a b-tree operator class for the subtype.",
				"propertyType": "text",
				"dependency": {
					"level": "parent",
					"key": "type",
					"value": "definitions"
				}
			},
			{
				"propertyName": "Collation",
				"propertyKeyword": "collation",
				"propertyTooltip": "The name of an existing collation to be associated with a range type.",
				"propertyType": "text",
				"dependency": {
					"level": "parent",
					"key": "type",
					"value": "definitions"
				}
			},
			{
				"propertyName": "Canonical function",
				"propertyKeyword": "canonicalFunction",
				"propertyTooltip": "The name of the canonicalization function for the range type.",
				"propertyType": "text",
				"dependency": {
					"level": "parent",
					"key": "type",
					"value": "definitions"
				}
			},
			{
				"propertyName": "Subtype diff",
				"propertyKeyword": "subtypeDiffFunction",
				"propertyTooltip": "The name of a difference function for the subtype.",
				"propertyType": "text",
				"dependency": {
					"level": "parent",
					"key": "type",
					"value": "definitions"
				}
			},
			{
				"propertyName": "Multirange type",
				"propertyKeyword": "multiRangeType",
				"propertyTooltip": "The name of the corresponding multirange type.",
				"propertyType": "text",
				"dependency": {
					"level": "parent",
					"key": "type",
					"value": "definitions"
				}
			},
			"unit",
			"minimum",
			"exclusiveMinimum",
			"maximum",
			"exclusiveMaximum",
			"multipleOf",
			"divisibleBy",
			"pattern",
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"domain": [
			"name",
			"code",
			"schemaId",
			"type",
			{
				"propertyName": "Underlying type",
				"propertyKeyword": "underlyingType",
				"propertyTooltip": "The underlying data type of the domain.",
				"propertyType": "text"
			},
			{
				"propertyName": "Collation",
				"propertyKeyword": "collation",
				"propertyTooltip": "An optional collation for the domain. If no collation is specified, the underlying data type's default collation is used. The underlying type must be collatable if COLLATE is specified.",
				"propertyType": "text"
			},
			{
				"propertyName": "Array type",
				"propertyType": "group",
				"propertyKeyword": "array_type",
				"propertyTooltip": "Declaring the array number of dimensions is simply for documentation; it does not affect run-time behavior.",
				"enableForReference": true,
				"structure": [
					{
						"propertyName": "Size limit",
						"propertyKeyword": "array_size_limit",
						"propertyTooltip": "Declaring the array size is simply for documentation; it does not affect run-time behavior.",
						"propertyType": "numeric",
						"valueType": "number",
						"minValue": 0,
						"step": 1
					}
				]
			},
			{
				"propertyName": "Not null",
				"propertyKeyword": "required",
				"enableForReference": true,
				"propertyType": "checkbox"
			},
			"default",
			{
				"propertyName": "Check constraints",
				"propertyKeyword": "checkConstraints",
				"propertyType": "group",
				"propertyTooltip": "CHECK clauses specify integrity constraints or tests which values of the domain must satisfy. Each constraint must be an expression producing a Boolean result. ",
				"structure": [
					{
						"propertyName": "Constraint name",
						"propertyKeyword": "name",
						"propertyType": "text"
					},
					{
						"propertyName": "Check expression",
						"propertyKeyword": "expression",
						"propertyType": "details",
						"template": "textarea",
						"markdown": false
					}
				]
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			"enum",
			"sample",
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"shouldValidate": false,
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		]
	}
}
